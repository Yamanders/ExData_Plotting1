set.seed(1234)
par(mar = c(0,0,0,0))
x<- rnorm(12, mean =rep(1:3, each = 4), sd = 0.2)
?rnorm
y<-rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex =2 )
text(x+0.05, y + 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x=x, y = y)
dist(dataFrame)
min(dataFrame)
distxy<-dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
dataFrame <- data.frame(x=x, y=y)
plot(hClustering)
distxy<-dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, Bodyweight)
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
library(nlme)
library(lattice)
str(mpg)
str(movies)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
library(datasets)
data(airquality)
summary(airquality)
qplot(wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~factor(month))
qplot(Wind, Ozone, data = airquality, facets = . ~factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = .~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
?par()
?splom()
?trellis.par.set()
library(lattice)
library(datasets)
data(airquality)
p<-xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?point()
?points()
?panel.lmline()
xyplot(weight ~ Time | Diet, BodyWeight)
?llines()
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~Month)
?geom
?geom()
g<-ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)+geom_smooth
qplot(votes, rating, data = movies)+geom_smooth()
?xtable
?xtable()
install.package(xtable)
install.packages(xtable)
install.packages(ggplot2)
install.packages("xtable")
install.packages("dplyer")
install.packages("dplyr")
dir()
list.files()
setwd(..)
setwd("..")
dir()
setwd("Exploratory Data Analysis//ExData_Plotting1")
png("plot2.png", width = 480, height = 480)
plot(fullTime, data3$V3, type = "l", xlab = "", ylab = "Global Active Power  (kilowatts)")
fullTime <- strptime(paste(data3[,1], data3[,2]), "%Y-%m-%d %H:%M:%S")
data <- read.table("household_power_consumption.txt", sep = ";")
data2 <- data
data2$V1 <- as.Date(data$V1, "%d/%m/%Y")
data3 <- data2[which( (data2$V1 == "2007-02-01") | (data2$V1 == "2007-02-02") ),]
data3$V3 <- as.numeric(levels(data3$V3))[data3$V3]
fullTime <- strptime(paste(data3[,1], data3[,2]), "%Y-%m-%d %H:%M:%S")
plot(fullTime, data3$V3, type = "l", xlab = "", ylab = "Global Active Power  (kilowatts)")
lines(data3$V7, fullTime, col = "pink")
lines(data3$V8, fullTime, col = "red")
plot(fullTime, data3$V9, type = "l", xlab = "", ylab = "Global Active Power  (kilowatts)")
lines(data3$V7, fullTime, col = "pink")
lines(data3$V8, fullTime, col = "red")
dev.off()
plot(fullTime, data3$V9, type = "l", xlab = "", ylab = "Global Active Power  (kilowatts)")
plot(fullTime, data3$V9, type = "l", xlab = "", ylab = "Global Active Power  (kilowatts)", col = "blue")
lines(data3$V7, fullTime, col = "pink")
lines(data3$V8, fullTime, col = "red")
plot(fullTime, data3$V9, type = "l", xlab = "", ylab = "Global Active Power  (kilowatts)", col = "pink")
lines(data3$V7, fullTime, col = "red")
max(data3[, 7:9])
max(data3[, 7:9]))
a<-c(1,2,4)
max(a)
a<-matrix(1,2,3,4)
max(a)
a<-c(1,2,4)
b<-c(2,1,4)
d<-c(3,5,7)
max(a,b,d)
?max()
data3[, 7:9]
?range()
range(data3$V7)
data3$V3 <- as.numeric(levels(data3$V3))[data3$V3]
range(data3$V7)
range(data3[, "V7"])
range(data3[, V7])
plot(fullTime, data3$V9, type = "l", xlab = "", ylab = "Global Active Power  (kilowatts)")
points(fullTime, data3$V8)
plot(fullTime, data3$V9, type = "l", col = "blue")
> lines(fullTime, data3$V7, col = "black")
lines(fullTime, data3$V7, col = "black")
> lines(fullTime, data3$V8, col = "red")
lines(fullTime, data3$V8, col = "red")
##data4<-data3
##data4$V2 <- strptime(paste(data3[,1], data3[,2]), "%Y-%m-%d %H:%M:%S")
fullTime <- strptime(paste(data3[,1], data3[,2]), "%Y-%m-%d %H:%M:%S")
png("plot2.png", width = 480, height = 480)
plot(fullTime, data3$V9, type = "l", col = "blue")
lines(fullTime, data3$V7, col = "black")
lines(fullTime, data3$V8, col = "red")
##data4<-data3
##data4$V2 <- strptime(paste(data3[,1], data3[,2]), "%Y-%m-%d %H:%M:%S")
##plot(fullTime, data3$V9, type = "l", xlab = "", ylab = "Global Active Power  (kilowatts)", col = "blue")
##lines(data3$V7, fullTime, col = "pink")
##lines(data3$V8, fullTime, col = "red")
dev.off()
data3$V8
png("plot3.png", width = 480, height = 480)
plot(fullTime, data3$V9, type = "l", col = "blue")
lines(fullTime, data3$V7, col = "black")
lines(fullTime, data3$V8, col = "red")
dev.off()
head(data3)
head(data)
head(data3)
tail(data3)
plot(fullTime, data3$V9, type = "l", col = "blue")
hist(data3$V3, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
plot(fullTime, data3$V9, type = "l", col = "blue")
head(data3)
head(data)
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") )
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd = 1 )
lines(fullTime, data3$V7, col = "black")
lines(fullTime, data3$V8, col = "red")
getData <- function(filepath = "exdata-data-household_power_consumption.zip"){
# unzip(filepath)
data <- read.table("household_power_consumption.txt", sep = ";")
data$V1 <- as.Date(data$V1, "%d/%m/%Y")
data3 <- data[which( (data$V1 == "2007-02-01") | (data$V1 == "2007-02-02") ),]
data3$V4 <- as.numeric(levels(data3$V4))[data3$V4]
data3$V5 <- as.numeric(levels(data3$V5))[data3$V5]
data3$V7 <- as.numeric(levels(data3$V7))[data3$V7]
data3$V8 <- as.numeric(levels(data3$V8))[data3$V8]
data3$V9 <- as.numeric(levels(data3$V9))[data3$V9]
return(data3)
}
plot3 <- function(){
data <- getData()
png("plot3.png", width = 480, height = 480)
plot(fullTime, data$V9, type = "l", col = "blue", ylim = c(0,38), xlab = "", ylab = "Energy sub metering")
lines(fullTime, data$V7, col = "black")
lines(fullTime, data$V8, col = "red")
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd = 1 )
dev.off()
}
plot3
plot3()
getData <- function(filepath = "exdata-data-household_power_consumption.zip"){
# unzip(filepath)
data <- read.table("household_power_consumption.txt", sep = ";")
data$V1 <- as.Date(data$V1, "%d/%m/%Y")
data3 <- data[which( (data$V1 == "2007-02-01") | (data$V1 == "2007-02-02") ),]
data3$V4 <- as.numeric(levels(data3$V4))[data3$V4]
data3$V5 <- as.numeric(levels(data3$V5))[data3$V5]
data3$V7 <- as.numeric(levels(data3$V7))[data3$V7]
data3$V8 <- as.numeric(levels(data3$V8))[data3$V8]
data3$V9 <- as.numeric(levels(data3$V9))[data3$V9]
return(data3)
}
plot3 <- function(){
data <- getData()
png("plot3.png", width = 480, height = 480)
plot(fullTime, data$V9, type = "l", col = "blue", ylim = c(0,38), xlab = "", ylab = "Energy sub metering")
lines(fullTime, data$V7, col = "black")
lines(fullTime, data$V8, col = "red")
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd = 1 )
dev.off()
}
plot3()
plot3 <- function(){
data <- getData()
png("plot3.png", width = 480, height = 480)
fullTime <- strptime(paste(data[,1], data[,2]), "%Y-%m-%d %H:%M:%S")
plot(fullTime, data$V9, type = "l", col = "blue", ylim = c(0,38), xlab = "", ylab = "Energy sub metering")
lines(fullTime, data$V7, col = "black")
lines(fullTime, data$V8, col = "red")
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd = 1 )
dev.off()
}
plot3()
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1Copy/plot3.R')
?legend
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1Copy/plot4.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1Copy/plot4.R', echo=TRUE)
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1Copy/plot4.R', echo=TRUE)
data <- getData()
png("plot4.png", width = 480, height = 480)
# Break up my plot space into 4
par(mfrow = c(2,2))
fullTime <- strptime(paste(data[,1], data[,2]), "%Y-%m-%d %H:%M:%S")
plot(fullTime, data$V3, type = "l", ylab = "Global Active Power", xlab = "")
plot(fullTime, data$V5, ylab = "Voltage", type = "l", xlab = "")
plot(fullTime, data$V9, type = "l", col = "blue", ylim = c(0,38), xlab = "", ylab = "Energy sub metering")
lines(fullTime, data$V7, col = "black")
lines(fullTime, data$V8, col = "red")
legend(border = "white", "topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd = 1 )
plot(fullTime, data$V4, type = "l", xlab = "", ylab = "Global_Reactive_Power")
dev.off()
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1Copy/plot4.R', echo=TRUE)
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1Copy/plot4.R', echo=TRUE)
plot1()
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1/plot1.R', echo=TRUE)
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1/plot1.R', echo=TRUE)
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1/plot1.R', echo=TRUE)
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1/plot1.R', echo=TRUE)
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1/plot1.R', echo=TRUE)
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1/plot3.R', echo=TRUE)
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1/plot3.R', echo=TRUE)
source('~/School Files/Open Courseware/Coursera/Exploratory Data Analysis/ExData_Plotting1/plot4.R', echo=TRUE)
swirl()
swirl
library(swirl)
swirl()
